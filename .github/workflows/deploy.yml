name: üöÄ Deploy Aleou to VPS

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permet d√©clenchement manuel

env:
  PROJECT_NAME: aleou-extractor
  VPS_PROJECT_PATH: /opt/aleou-extractor

jobs:
  test:
    name: üß™ Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short
      continue-on-error: true

  deploy:
    name: üöÄ Deploy to VPS
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: üîê Deploy via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT || 22 }}
        timeout: 300s
        script: |
          echo "üöÄ D√©but du d√©ploiement..."
          
          # Cr√©er le dossier projet s'il n'existe pas
          sudo mkdir -p ${{ env.VPS_PROJECT_PATH }}
          sudo chown -R ${{ secrets.VPS_USER }}:${{ secrets.VPS_USER }} ${{ env.VPS_PROJECT_PATH }}
          
          # Naviguer vers le projet
          cd ${{ env.VPS_PROJECT_PATH }}
          
          # Clone ou mise √† jour du repository
          if [ -d ".git" ]; then
            echo "üì• Mise √† jour du code existant..."
            git fetch origin
            git reset --hard origin/main
            git clean -fd
          else
            echo "üì• Clone initial du repository..."
            git clone https://github.com/${{ github.repository }}.git .
          fi
          
          # V√©rifier que le script de d√©ploiement existe et est ex√©cutable
          if [ -f "deploy.sh" ]; then
            chmod +x deploy.sh
            echo "üîß Lancement du d√©ploiement..."
            ./deploy.sh production
          else
            echo "‚ùå Script deploy.sh non trouv√©"
            exit 1
          fi
          
          echo "‚úÖ D√©ploiement termin√© avec succ√®s!"

  health-check:
    name: üè• Health Check
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - name: Wait and check application
      env:
        VPS_HOST: ${{ secrets.VPS_HOST }}
      run: |
        echo "‚è≥ Attente du d√©marrage de l'application..."
        sleep 30
        
        # Test de base de l'application
        curl -f -m 10 http://$VPS_HOST:8501/_stcore/health || echo "‚ö†Ô∏è Health check failed (normal si en production avec Caddy)"
        
        echo "üéâ D√©ploiement v√©rifi√©!"