services:
  aleou-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aleou-app
    ports:
      - "8501:8501"
    volumes:
      # ðŸ”§ Code montÃ© en volume pour dÃ©veloppement rapide
      - ./:/app
      - /app/venv  # Exclure le venv pour Ã©viter les conflits
      - /app/.git  # Exclure .git
      - app_cache:/app/cache  # Cache persistant
      - app_outputs:/app/outputs  # Outputs persistants
    environment:
      - PYTHONPATH=/app
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - aleou-network

  # Reverse proxy pour production
  caddy:
    image: caddy:2-alpine
    container_name: aleou-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
    profiles:
      - production
    networks:
      - aleou-network
    depends_on:
      aleou-app:
        condition: service_healthy

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  app_cache:
    driver: local
  app_outputs:
    driver: local

networks:
  aleou-network:
    driver: bridge
